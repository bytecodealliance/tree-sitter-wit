==================
Additional types
==================

interface foo {
    type alias = string;

    fn1: func(hey: u32, ho: string) -> bool;
    fn2: func() -> result<bool, u32>;
    fn3: func() -> option<bool>;

    resource res {
        constructor();
        fn1: func(p: string) -> result<u32, aaa>;
        fn2: func(%p: borrow<string>) -> result<u32, aaa>;
    }

    record rec1 {
    }

    record rec2 {
        num: u32,
    }

    flags fl {
        a,
        b,
    }

    enum en {
        a,
        b,
    }

    variant var {
        a,
        b,
    }
}

---

(source_file
  (interface_item
    (id)
    (interface_body
      (interface_items
        (typedef_item
          (type_item
            (id)
            (ty))))
      (interface_items
        (func_item
          (id)
          (func_type
            (param_list
              (named_type_list
                (named_type
                  (id)
                  (ty))
                (named_type
                  (id)
                  (ty))))
            (result_list
              (ty)))))
      (interface_items
        (func_item
          (id)
          (func_type
            (param_list)
            (result_list
              (ty
                (result
                  (ty)
                  (ty)))))))
      (interface_items
        (func_item
          (id)
          (func_type
            (param_list)
            (result_list
              (ty
                (option
                  (ty)))))))
      (interface_items
        (typedef_item
          (resource_item
            (id)
            (resource_body
              (resource_method
                (param_list))
              (resource_method
                (func_item
                  (id)
                  (func_type
                    (param_list
                      (named_type_list
                        (named_type
                          (id)
                          (ty))))
                    (result_list
                      (ty
                        (result
                          (ty)
                          (ty
                            (id))))))))
              (resource_method
                (func_item
                  (id)
                  (func_type
                    (param_list
                      (named_type_list
                        (named_type
                          (id)
                          (ty
                            (handle
                              (id))))))
                    (result_list
                      (ty
                        (result
                          (ty)
                          (ty
                            (id))))))))))))
      (interface_items
        (typedef_item
          (record_item
            (id)
            (record_body))))
      (interface_items
        (typedef_item
          (record_item
            (id)
            (record_body
              (record_field
                (id)
                (ty))))))
      (interface_items
        (typedef_item
          (flags_items
            (id)
            (flags_body
              (id)
              (id)))))
      (interface_items
        (typedef_item
          (enum_items
            (id)
            (enum_body
              (enum_cases
                (enum_case
                  (id))
                (enum_case
                  (id)))))))
      (interface_items
        (typedef_item
          (variant_items
            (id)
            (variant_body
              (variant_cases
                (variant_case
                  (id))
                (variant_case
                  (id))))))))))
