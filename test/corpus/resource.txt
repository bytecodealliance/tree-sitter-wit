==================
Streams and Async
==================
interface filesystem {
  resource file {
    constructor();
    is-closed: func() -> bool;
    read: async func(num-bytes: u32) -> result<list<u8>>;
    from-bytes: static func(bytes: list<u8>) -> file;
    from-stream: static async func(bytes: stream<u8>) -> file;
  }
}

---



==================
Desugared
:skip
==================
world imports {
  %[constructor]blob: func(init: list<u8>) -> blob;
  %[method]blob.write: func(self: borrow<blob>, bytes: list<u8>);
  %[method]blob.read: func(self: borrow<blob>, n: u32) -> list<u8>;
  %[static]blob.merge: func(lhs: borrow<blob>, rhs: borrow<blob>) -> blob;
}

---


